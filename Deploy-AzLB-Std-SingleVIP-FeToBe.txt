##
## Last Updated: 2020-04-24
## Purpose: Deploy Single Azure Load Balancer Standard
## Source: https://github.com/niloc079/AzureLoadBalancers/blob/master/Deploy-AzLB-Std-SingleVIP-HAPorts
## Created by: TBD
## Created by Email: TBD
## Organization: TBD
## Environment: TBD
## Application: TBD
##
## Technical Reference: https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-get-started-ilb-arm-ps
## Technical Reference: https://github.com/Huachao/azure-content/blob/master/articles/load-balancer/load-balancer-internal-arm-powershell.md
## Technical Reference: https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/load-balancer/load-balancer-multiple-ip-powershell.md
## Technical Reference: https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-distribution-mode
##
## Usage;
## Replace all values within brackets [] with value data from environment
##
#
#Variables [START]
#

#ADzDefaults
$AzLoc = "[AzLocation]"                  #Azure Location Name
$SubID = "[AzSubID]"                     #Azure Subscription ID

#Tags
$TagCreatedBy = "[AzTagEmail]"           #Email or name
$TagCreatedDate = "[AzTagCreatedDate]"   #Created date, update format as needed
$TagApplication = "[AzTagApp]"        #Azure Application, exmp: ADFS, SAP
$TagEnvironment = "[AzTagEnv]"        #Azure Environment, exmp: PRD, QA, TEST, DEV
$TagFunction = "[AzTagFunction]"      #Function/Type, exmp: LB - Load Balancer, SQL - SQL Server
$TagLocation = "[AzTagLoc]"           #Azure Location, exmp: USCE - Central US, use if [AzLoc] isn't in the correct format
$TagObjectSKU = "[AzTagSku]"             #Azure SKU, exmp: Free, Standard, Premium

#AzNetwork
$AzVnetRg = "[AzLbVnetRg]"              #Azure Virtual Network Resource Group (Not the AzLB)
$AzVnet = "[AzLbVnet]"                  #Azure Virtual Network for Azure Load Balancer, must be same VNET, usually same AzSubnet
$AzSubnet = "[AzLbSubnet]"              #Azure Subnet (inside above VNET) for Azure Load Balancer

#AzLoadBalancer
$AzAlbRg = "[AzLbRg]"                   #Azure Resource Group for Azure Load Balancer
$AzAlbName = "[AzLbName]"               #Azure Load Balancer Name
$AzAlbFe1 = "[AzLbName]FE1"             #Azure Load Balancer Frontend Name #1
$AzAlbRu1 = "[AzLbName]RU1"             #Azure Load Balancer Rule Name #1
$AzAlbHp1 = "[AzLbName]HP1"             #Azure Load Balancer Health Probe #1
$AzAlbBe1 = "[AzLbName]BE1"             #Azure Load Balancer Backend Pool #1
$AzAlbBe1Prtcl = "TCP"                  #Azure Load Balancer TCP or UDP
$AzAlbFe1Prt = "80"                     #Azure Load Balancer HA port configration, front end diff than backend, can be same
$AzAlbBe1Prt = "8080"                   #Azure Load Balancer HA port configration, front end diff than backend, can be same
$AzAlbIp = "[0.0.0.0]"                  #Azure Load Balancer Frontend IP
$AzAlbHp1Prt = "80"                     #Azure Load Balancer Healthprobe Port, update to application listener, exmp. 80 or 443 or 8080
$AzAlbHp1Prtcl = "http"                 #Azure Load Balancer Healthprobe Type
$AzAlbHp1Pth = "/"                      #Azure Load Balancer Healthprobe URL/URI Call, must get 200 at this address

#VM NICs
$AzVMRg = "[AzVmRg]"                    #Azure Resource Group for Azure VM's
$AzVM1 = "[AzVmName1]"                  #Azure VM 1 Name for backend pool             #Not used
$AzVMNic1 = "[AzVmNicName1]"            #Azure VM 1 NIC name for backend pool
$AzVM2 = "[AzVmName2]"                  #Azure VM 2 Name for backend pool             #Not used
$AzVMNic2 = "[AzVmNicName2]"            #Azure VM 1 NIC name for backend pool
#
# Variables [END]
#
#
# Script [Start]
#
#Login and Connect
#Clear-AzContext                         #Clears logins
Connect-AzAccount
Get-AzSubscription
Select-AzSubscription -Subscriptionid $SubID

#Create new AzRg
New-AzResourceGroup -Name $AzAlbRg -location $AzLoc

#Get VNET
$vnet = Get-AzVirtualNetwork -Name $AzVnet -ResourceGroupName $AzVnetRg
$Subnet = Get-AzVirtualNetworkSubnetConfig -Name $AzSubnet -VirtualNetwork $vnet

#New Ip for pool
$frontendIP = New-AzLoadBalancerFrontendIpConfig -Name $AzAlbFe1 -PrivateIpAddress $AzAlbIp -Subnet $Subnet
$beaddresspool= New-AzLoadBalancerBackendAddressPoolConfig -Name $AzAlbBe1

#LB Configuration
$healthProbe = New-AzLoadBalancerProbeConfig -Name $AzAlbHp1 -Protocol $AzAlbHp1Prtcl -RequestPath $AzAlbHp1Pth -Port $AzAlbHp1Prt -IntervalInSeconds 60 -ProbeCount 2
$lbrule = New-AzLoadBalancerRuleConfig -Name $AzAlbRu1 -FrontendIpConfiguration $frontendIP -BackendAddressPool $beAddressPool -Probe $healthProbe -Protocol $AzAlbBe1Prtcl -FrontendPort $AzAlbFe1Prt -BackendPort $AzAlbBe1Prt –LoadDistribution sourceIP

#Create LB
$NRPLB = New-AzLoadBalancer -ResourceGroupName $AzAlbRg -Name $AzAlbName -Location $AzLoc -FrontendIpConfiguration $frontendIP -LoadBalancingRule $lbrule -BackendAddressPool $beAddressPool -Probe $healthProbe -Sku Standard

#Assign NIC
$lb = Get-AzLoadBalancer –name $AzAlbName -resourcegroupname $AzAlbRg

#Save
$backend = Get-AzLoadBalancerBackendAddressPoolConfig -name $AzAlbBe1 -LoadBalancer $lb
$nic = Get-AzNetworkInterface -Name $AzVMNic1
$nic.IpConfigurations[0].LoadBalancerBackendAddressPools=$backend
Set-AzNetworkInterface -NetworkInterface $nic
$nic2 = Get-AzNetworkInterface -Name $AzVMNic2
$nic2.IpConfigurations[0].LoadBalancerBackendAddressPools=$backend
Set-AzNetworkInterface -NetworkInterface $nic2

#Tags
$resource = Get-AzResource -ResourceName $AzAlbName -ResourceGroupName $AzAlbRg
Set-AzResource -Tag @{ 
"CreatedBy"=$TagCreatedBy; 
"CreatedDate"=$TagCreatedDate; 
"Application"=$TagApplication; 
"Environment"=$TagEnvironment; 
"Function"=$TagFunction; 
"Location"=$TagLocation; 
"ObjectSKU"=$TagObjectSKU; 
} -ResourceId $resource.ResourceId -Force

#
# Script [End
#
